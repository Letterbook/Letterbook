name: Build

on:
  workflow_dispatch:
  push:
    branches:
      - 'main'
  pull_request:
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
    branches:
      - 'main'

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages
      
    steps:
      - uses: actions/checkout@v4
        
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      
      - name: Package Cache
        id: package-cache
        uses: actions/cache@v4
        with:
          path: ${{env.NUGET_PACKAGES}}
          key: "${{ runner.os }}-nuget-${{ hashFiles('Directory.Packages.props') }}"
      
      - name: Restore Packages
        if: steps.package-cache.outputs.cache-hit != 'true'
        run: dotnet restore
      
      - name: Restore Tools
        run: dotnet tool restore
      
      - name: Build
        run: dotnet build Letterbook.sln --configuration Release
      
      - name: Test
        run: dotnet test Letterbook.UnitTests.slnf --configuration Release --logger GitHubActions --blame-crash --no-build
        
      - name: Save test crash report
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: TestResults
          path: '**/TestResults/'
      
      - name: Check Relational Migrations
        run: dotnet ef migrations has-pending-model-changes
        working-directory: Letterbook.Adapter.Db/
        
      - name: Check Feeds Migrations
        run: dotnet ef migrations has-pending-model-changes
        working-directory: Letterbook.Adapter.TimescaleFeeds/

      - name: Check Docs Prerender
        working-directory: ./Letterbook.Docs
        run: |
          echo "Prerendering for deployment to $custom_domain"
          dotnet run --AppTasks=prerender --environment Production --BaseUrl "${{env.custom_domain}}"
        env:
          custom_domain: "letterbook.com"
      
      - name: Check Generated Files
        run: |
          CHANGED=$(git status --porcelain -uno)
          if [ -n "$CHANGED" ]; then
            echo "$CHANGED"
            echo 'Failed: Stale files'
            exit 1
          fi
        shell: bash