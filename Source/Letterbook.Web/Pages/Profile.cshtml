@page "{id}"
@using Letterbook.Core.Values
@using Letterbook.Web.Tags
@using Microsoft.AspNetCore.Mvc.TagHelpers
@model Profile

@{
    ViewData["Title"] = $"{Model.DisplayName} (@{Model.FullHandle})";
}

<section class="profile">
    <header>
        <img src="/img/banner-placeholder.png" alt="user provided alt text" class="fill"/>
        <div class="profile-name-container">
            <h1 tabindex="0">
                @Model.DisplayName
            </h1>
            <p>@@@Model.FullHandle</p>
        </div>
    </header>
    <div class="profile-info">
        @if (!Model.Blocked)
        {
            <img class="profile-pic" src="img/user-square.png" alt="user provided alt text"/>
        }
        <div class="profile-controls">
            @if (User.Identity?.IsAuthenticated == true && Model.SelfId == Model.GetId)
            {
                <a asp-area="Profile" asp-page="Edit" asp-route-id="@Model.SelfId">Edit</a>
            }
            else if (Model.UserProfile != null)
            {
                switch (Model.YouFollow)
                {
                    case FollowState.Accepted:
                        <form asp-page-handler="Unfollow" asp-route-followId="@Model.GetId" method="post">
                            <button type="submit">Unfollow</button>
                        </form>
                        break;
                    case FollowState.None:
                        <form asp-page-handler="FollowRequest" asp-route-followId="@Model.GetId" method="post">
                            <button type="submit">Follow</button>
                        </form>
                        break;
                    case FollowState.Pending:
                        <form asp-page-handler="Unfollow" asp-route-followId="@Model.GetId" method="post">
                            <button type="submit">Cancel Follow Request</button>
                        </form>
                        break;
                    case FollowState.Rejected:
                    case FollowState.Blocked:
                    default:
                        throw new ArgumentOutOfRangeException();
                }

                <div class="menu-collapsible-right" role="menu">
                    <label class="collapse-control icon-outline display-button">
                        <app-icon type=@Icon.More/>
                        <input type="checkbox"/>
                    </label>
                    <div class="menu-items-container">
                        <div class="menu-items">
                            <a href="/">Report</a>
                            <a href="/">Other Stuff</a>
                        </div>
                    </div>
                </div>
            }
        </div>
        <div class="profile-main">
            @if (Model.Blocked)
            {
                <p>Profile details hidden</p>
            }
            else
            {
                <div class="profile-description">@Model.Description</div>
                <div class="profile-stats">
                    <span>@string.Format(ShortNumberFormatter.Instance, "{0:compact}", Model.FollowerCount) followers</span>
                    <span>@string.Format(ShortNumberFormatter.Instance, "{0:compact}", Model.FollowingCount) following</span>
                    <span>@string.Format(ShortNumberFormatter.Instance, "{0:compact}", Model.PostCount) posts</span>
                    <span>Joined
                        <time datetime="@Model.CreatedDate.ToString("r")">
                            @Model.CreatedDate.ToString("M") @Model.CreatedDate.ToString("yyyy") UTC
                        </time>
                    </span>
                </div>

                @if (User.Identity?.IsAuthenticated == true && Model.SelfId != Model.GetId)
                {
                    @switch (Model.FollowsYou)
                    {
                        case FollowState.Accepted:
                            <form asp-page-handler="RemoveFollower" asp-route-followerId="@Model.GetId"
                                  method="post">
                                <span>Follows you</span>
                                <button type="submit" class="secondary">Remove follower</button>
                            </form>
                            break;
                        case FollowState.Pending:
                            <form asp-page-handler="AcceptFollower" asp-route-followerId="@Model.GetId"
                                  method="post">
                                <p>Requested to follow you</p>
                                <button type="submit" name="action" value="accept">Accept</button>
                                <button type="submit" name="action" value="reject" class="secondary">Reject</button>
                            </form>
                            break;
                        case FollowState.Blocked:
                            <p class="secondary">Blocked</p>
                            break;
                        case FollowState.None:
                        case FollowState.Rejected:
                        default:
                            break;
                    }
                }
            }
        </div>
        @if (!Model.Blocked)
        {
            <dl class="profile-custom-field-container">
                @foreach (var field in Model.CustomFields)
                {
                    <div class="profile-custom-field">
                        <dt>@field.Label</dt>
                        <dd>@field.Value</dd>
                    </div>
                }
            </dl>
        }
    </div>
</section>
<section class="profile-posts timeline">
    <h2>Posts</h2>
    @foreach (var post in Model.Posts)
    {
        <partial name="Shared/_TimelinePostPartial" model="post"/>
    }
    <a asp-page="Profile" asp-route-id="@Model.FullHandle"
       asp-route-postsBeforeDate="@Model.Posts.LastOrDefault()?.CreatedDate">Load older posts</a>
</section>
