version: '3.10'

services:
  mastodon:
    image: docker.io/helgekr/pasture-mastodon:${VERSION:-latest}
    container_name: mastodon
    depends_on:
      mastodon_db: { condition: service_healthy }
      mastodon_redis:
        condition: service_healthy
    environment:
      - WEB_CONCURRENCY=1
      - PAPERCLIP_ROOT_URL=http://localhost:2970/system
      - CDN_HOST=http://localhost:2970/system
      - "MASTODON_NAME=mastodon"
    command: bundle exec rails server -p 80 -b 0.0.0.0
    ports: ["2970:80"]
    volumes:
      - mastodon_images_storage:/opt/mastodon/public/system
    networks:
      - mastodon
      - default
    healthcheck:
      test: curl --fail localhost || exit 1
      interval: 10s
      timeout: 10s
      retries: 10
    restart: unless-stopped
  
  misskey:
    image: docker.io/helgekr/pasture-misskey:${VERSION:-latest}
    container_name: misskey
    depends_on:
      misskey_redis:
        condition: service_healthy
      misskey_db:
        condition: service_healthy
    ports: ["2973:80"]
    healthcheck:
      test: curl --fail localhost || exit 1
      interval: 10s
      timeout: 10s
      retries: 10
    restart: unless-stopped

  letterbook:
    container_name: letterbook
    build:
      dockerfile: Dockerfile
      target: dev
      tags:
        - localhost/letterbook:latest
    environment: 
      ASPNETCORE_ENVIRONMENT: Development
    volumes:
      - './volumes/appsettings.Federation.json:/app/appsettings.json:z'
    ports:
      - '5127:80'
    networks:
      - default
      - letterbook
    healthcheck:
      test: curl --fail localhost/healthz || exit 1
      interval: 5s
      timeout: 1s
      retries: 10
    depends_on:
      letterbook_db:
        condition: service_healthy
  
  ## Supporting infrastructure
  
  letterbook_db:
    container_name: letterbook_db
    image: timescale/timescaledb:2.17.2-pg15-oss
    environment:
      - POSTGRES_USER=letterbook
      - POSTGRES_PASSWORD=letterbookpw
      - POSTGRES_DB=letterbook
    volumes:
      - letterbook_db_data:/var/lib/postgresql/data
    networks:
      - letterbook
    healthcheck:
      test: pg_isready -d letterbook
      interval: 2s
      timeout: 1s
      retries: 10
    restart: always

  misskey_db:
    image: postgres:14-alpine
    container_name: misskey_db
    environment:
      - "POSTGRES_PASSWORD=pass"
    networks:
      - misskey
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 10s
      retries: 3
    restart: unless-stopped
  misskey_redis:
    image: redis:7-alpine
    container_name: misskey_redis
    networks:
      - misskey
    healthcheck:
      test: "redis-cli ping"
      interval: 5s
      retries: 20
    restart: unless-stopped
  
  mastodon_db:
    image: docker.io/postgres:14-alpine
    container_name: mastodon_db
    environment:
      - "POSTGRES_PASSWORD=pass"
    #    volumes: # uncomment to make datastore permanent
    #      - ./volumes/mastodon42/db:/var/lib/postgresql/data
    networks:
      - mastodon
    healthcheck:
      test: pg_isready -U postgres
      interval: 10s
      timeout: 10s
      retries: 3
    restart: unless-stopped
  mastodon_redis:
    image: docker.io/redis:7-alpine
    container_name: mastodon_redis
    networks:
      - mastodon
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 10s
      retries: 3
    restart: unless-stopped
  mastodon_sidekiq:
    image: docker.io/helgekr/pasture-mastodon:${VERSION:-latest}
    container_name: mastodon_sidekiq
    networks:
      - mastodon
    depends_on:
      mastodon:
        condition: service_healthy
    environment:
      - "MASTODON_NAME=mastodon"
    command: bundle exec sidekiq --concurrency 1
    volumes:
      - mastodon_images_storage:/opt/mastodon/public/system
    restart: unless-stopped

networks:
  default:
    name: fediverse-pasture
    external: true
  letterbook:
  mastodon:
  misskey:

volumes:
  mastodon_images_storage:
  letterbook_db_data:
